{
	"info": {
		"_postman_id": "46591700-5461-4b15-b41c-d08a8ff698d4",
		"name": "DT Management Test Local",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30244257"
	},
	"item": [
		{
			"name": "Create Module",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"post create module\");\r",
							"const location = pm.response.headers.get('Location');\r",
							"const moduleId = location.substring(location.lastIndexOf('/')+1);\r",
							"console.log(\"moduleId: \" + moduleId);\r",
							"pm.collectionVariables.set('moduleId', moduleId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"aas\" : \"ew0KICAiYXNzZXRBZG1pbmlzdHJhdGlvblNoZWxscyIgOiBbIHsNCiAgICAibW9kZWxUeXBlIiA6ICJBc3NldEFkbWluaXN0cmF0aW9uU2hlbGwiLA0KICAgICJhc3NldEluZm9ybWF0aW9uIiA6IG51bGwsDQogICAgInN1Ym1vZGVscyIgOiBbIHsNCiAgICAgICJrZXlzIiA6IFsgew0KICAgICAgICAidHlwZSIgOiAiU3VibW9kZWwiLA0KICAgICAgICAidmFsdWUiIDogImh0dHA6Ly9leGFtcGxlLm9yZy9zdWJtb2RlbC8xIg0KICAgICAgfSBdLA0KICAgICAgInR5cGUiIDogIk1vZGVsUmVmZXJlbmNlIg0KICAgIH0gXSwNCiAgICAiaWQiIDogImh0dHA6Ly9leGFtcGxlLm9yZy9hYXMvMSINCiAgfSBdLA0KICAic3VibW9kZWxzIiA6IFsgew0KICAgICJtb2RlbFR5cGUiIDogIlN1Ym1vZGVsIiwNCiAgICAia2luZCIgOiAiSW5zdGFuY2UiLA0KICAgICJpZCIgOiAiaHR0cDovL2V4YW1wbGUub3JnL3N1Ym1vZGVsLzEiLA0KICAgICJpZFNob3J0IiA6ICJzdWJtb2RlbDEiLA0KICAgICJzdWJtb2RlbEVsZW1lbnRzIiA6IFsgew0KICAgICAgIm1vZGVsVHlwZSIgOiAiUHJvcGVydHkiLA0KICAgICAgInZhbHVlIiA6ICIwIiwNCiAgICAgICJ2YWx1ZVR5cGUiIDogInhzOmludCIsDQogICAgICAiaWRTaG9ydCIgOiAicHJvcGVydHlJbnQiDQogICAgfSwgew0KICAgICAgIm1vZGVsVHlwZSIgOiAiUHJvcGVydHkiLA0KICAgICAgInZhbHVlIiA6ICIiLA0KICAgICAgInZhbHVlVHlwZSIgOiAieHM6aW50IiwNCiAgICAgICJpZFNob3J0IiA6ICJwcm9wZXJ0eVN0cmluZyINCiAgICB9LCB7DQogICAgICAibW9kZWxUeXBlIiA6ICJQcm9wZXJ0eSIsDQogICAgICAidmFsdWUiIDogIjAuMCIsDQogICAgICAidmFsdWVUeXBlIiA6ICJ4czppbnQiLA0KICAgICAgImlkU2hvcnQiIDogInByb3BlcnR5RG91YmxlIg0KICAgIH0gXQ0KICB9IF0NCn0=\",\r\n  \"format\" : \"JSON\",\r\n  \"type\" : \"DOCKER\",\r\n  \"assetConnections\" : [ ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/modules",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Modules",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}:{{port}}/modules",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Module Details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}:{{port}}/modules/{{moduleId}}/details",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules",
						"{{moduleId}}",
						"details"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign External Smart Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const endpoint = pm.response.json().endpoint;\r",
							"pm.collectionVariables.set('externalServiceEndpoint', endpoint);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serviceCatalogId\": \"external-1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/modules/{{moduleId}}/services",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules",
						"{{moduleId}}",
						"services"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invoke External Smart Service Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"inputArguments\": {\r\n\t\t\"name\": \"bar\"\r\n\t},\r\n\t\"inoutputArguments\": {},\r\n\t\"clientTimeoutDuration\": \"PT60S\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{externalServiceEndpoint}}/invoke/$value",
					"host": [
						"{{externalServiceEndpoint}}"
					],
					"path": [
						"invoke",
						"$value"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign Internal Smart Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const endpoint = pm.response.json().endpoint;\r",
							"pm.collectionVariables.set('internalServiceEndpoint', endpoint);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serviceCatalogId\": \"internal-1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/modules/{{moduleId}}/services",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules",
						"{{moduleId}}",
						"services"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invoke Internal Smart Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"inputArguments\": {},\r\n\t\"inoutputArguments\": {},\r\n\t\"clientTimeoutDuration\": \"PT60000S\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{internalServiceEndpoint}}/invoke/$value",
					"host": [
						"{{internalServiceEndpoint}}"
					],
					"path": [
						"invoke",
						"$value"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign Internal Smart Service With Blob",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const endpoint = pm.response.json().endpoint;\r",
							"pm.collectionVariables.set('internalServiceWithBlobEndpoint', endpoint);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serviceCatalogId\": \"internal-with-blob-1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/modules/{{moduleId}}/services",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules",
						"{{moduleId}}",
						"services"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invoke Internal Smart Service With Blob",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inputArguments\": {\r\n        \"input1\": {\r\n            \"contentType\": \"application/json\",\r\n            \"value\": \"ewoJImRhdGEiOiAxLjMKfQ==\"\r\n        }\r\n    },\r\n    \"inoutputArguments\": {},\r\n    \"clientTimeoutDuration\": \"PT60S\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{internalServiceWithBlobEndpoint}}/invoke/$value",
					"host": [
						"{{internalServiceWithBlobEndpoint}}"
					],
					"path": [
						"invoke",
						"$value"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign Embedded Smart Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const endpoint = pm.response.json().endpoint;\r",
							"pm.collectionVariables.set('embeddedServiceEndpoint', endpoint);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serviceCatalogId\": \"embedded-1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/modules/{{moduleId}}/services",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules",
						"{{moduleId}}",
						"services"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invoke Embedded Smart Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"inputArguments\": {\r\n\t\t\"currentTime\": 0,\r\n\t\t\"timeStep\": 0.01,\r\n\t\t\"stepCount\": 3,\r\n\t\t\"argumentsPerStep\": []\r\n\t},\r\n\t\"inoutputArguments\": {},\r\n\t\"clientTimeoutDuration\": \"PT60S\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{embeddedServiceEndpoint}}/invoke/$value",
					"host": [
						"{{embeddedServiceEndpoint}}"
					],
					"path": [
						"invoke",
						"$value"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Module",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/modules/{{moduleId}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"modules",
						"{{moduleId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "8094",
			"type": "string"
		},
		{
			"key": "moduleId",
			"value": "",
			"type": "string"
		},
		{
			"key": "externalServiceEndpoint",
			"value": "",
			"type": "string"
		},
		{
			"key": "internalServiceEndpoint",
			"value": "",
			"type": "string"
		},
		{
			"key": "internalServiceWithBlobEndpoint",
			"value": "",
			"type": "string"
		},
		{
			"key": "embeddedServiceEndpoint",
			"value": "",
			"type": "string"
		}
	]
}